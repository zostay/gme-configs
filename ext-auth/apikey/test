#!/usr/bin/env perl

use v5.36;
use warnings;
use experimental 'try';
no warnings 'experimental::try';

use FindBin;
use lib "$FindBin::Bin/../../lib";

use JSON qw( decode_json );

use Kubectl qw( Cluster1 MgmtCluster );
use Turl qw( test_GET );
use Cert qw( make_tls_secret_if_needed );

sub MAIN () {
    Cluster1->apply("load-c1.yaml");
    MgmtCluster->apply("load-mgmt.yaml");

    make_tls_secret_if_needed({
        cluster   => Cluster1,
        name      => 'example-secret',
        host      => 'www.example.com',
        namespace => 'istio-gateway-ns',
    });

    test_GET(
        "https://www.example.com:31443/noauth",
        "noauth version of httpbin is ok without API key",
    );

    test_GET(
        "https://www.example.com:31443/ratings/1",
        "ratings in second routetable is ok without API key",
    );

    test_GET(
        "https://www.example.com:31443/auth",
        "httpbin without API key is unauthorized",
        {
            expected_status => 401,
        },
    );

    test_GET(
        "https://www.example.com:31443/auth",
        "httpbin with API key is authorized",
        {
            headers => [
                'api-key' => 'N2YwMDIxZTEtNGUzNS1jNzgzLTRkYjAtYjE2YzRkZGVmNjcy',
            ],
            response_matches => sub ($res) {
                try {
                    my $data = decode_json($res->content);
                    return $data->{headers}{"X-User-Id"} eq "userID-12345";
                }
                catch ($x) {
                    return ('', "$x in '".quotemeta($res->content)."'");
                }
            },
        },
    );
}

MAIN;